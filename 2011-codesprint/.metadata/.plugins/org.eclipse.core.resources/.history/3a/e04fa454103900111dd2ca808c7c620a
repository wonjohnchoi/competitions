import java.util.Collections;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.Scanner;


public class PickingCards {
    public static void main(String args[]) {
        Scanner in = new Scanner(System.in);
        int MAXN = 50000;
        long MOD = 1000000007;
        long result = 1;
        
        int t = in.nextInt();
        for (int i = 0; i < t ; i += 1) {
            int n = in.nextInt();
            LinkedList<Integer> ins = new LinkedList<Integer>();
            
            for (int j = 0; j < n; j += 1) {
                ins.add(in.nextInt());
            }
            
            int[] weight = new int[MAXN];
            int[] freq = new int[MAXN];
            int idx = 0;
            while (!ins.isEmpty()) {
                weight[idx] = ins.get(0);
                freq[idx] = Collections.frequency(ins, weight[idx]);
                Iterator<Integer> iter= ins.iterator();
                while (iter.hasNext()) {
                    if (iter.next() == weight[idx]) {
                        iter.remove();
                    }
                }
                idx += 1;
            }
            
            for (int j = 0; j < MAXN; j += 1) {
                result *= perm(weight[j], freq[j], MOD)
            }
        }
        
    }

    private static long perm(int n, int r, int MOD) {
        if (n < r) {
            return 0;
        }
        long result = 1;
        for (int i = n; i >= n - r + 1; i -= 1) {
            result = result * i % MOD;
        }
        return result;
        
    }
    
    
}
